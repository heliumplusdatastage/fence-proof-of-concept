##
# build/run properties and values
#
# define and supply to build/run using, e.g., docker-compose by copying this file to .env in docker-compose.yaml dir
#

#
## fence-db service
#

# postgresql image env vars per https://hub.docker.com/_/postgres/
# these create a superuser
# values must agree with fence-config.yaml line DB: 'postgresql://test:test@localhost:5432/fence'
POSTGRES_PASSWORD=<***DB PASSWORD***>
POSTGRES_USER=fence
POSTGRES_DB=fence

#
## Fence service
# 

# the fence release to pull from github
FENCE_RELEASE_VERSION=4.0.0

# set to True to maximize logging
GEN3_DEBUG=True

# this is a host dir containing files that will be bind-mounted on the fence container
# it must contain the following: 
# (1) the fence config file [fence-config.yaml], which must version from FENCE_RELEASE_VERSION
# (2) jwt-keys.tar, created using:
#   mkdir keys/`date -Is`
#   cd to the date/ dir
#   generate the private key with:
#   openssl genpkey -algorithm RSA -out jwt_private_key.pem -pkeyopt rsa_keygen_bits:2048
#   Generate the public key with:
#   openssl rsa -pubout -in jwt_private_key.pem -out jwt_public_key.pem
#   tar cvf jwt-keys.tar --owner=nginx keys (user must be 'nginx' for read permissions in ontainer)
# (3) service account creds for GOOGLE_APPLICATION_CREDENTIALS (put JSON file in keys dir for tar)
# (4) credentials for GOOGLE_STORAGE_CREDS (if any; put JSON file in keys dir for tar)
# (5) user.yaml - contains dbgap project perms for user(s) that will log in or have API key created
# (6) uwsgi.conf containing location directives for nginx
FENCE_CONFIG_DIR=<***/absolute/path/to/config/fence dir***>

#
## wts-stub service
#

# URL for Fence endpoint
COMMONS_URI=http://<***FQHN; http only for now***>

# this is an API key that must be obtained beforehand from Fence (see heliumplusdatastage/fence-proof-of-concept/README.md)
API_KEY=<***long key string generated by Fence - see ../README.md for how to obtain***>

#
## worker container
#

# URL for Fence endpoint
FENCE_HOST=http://<***FQHN; http only for now***>

# URL for WTS
WTS_URL=http://wts-stub:8001

