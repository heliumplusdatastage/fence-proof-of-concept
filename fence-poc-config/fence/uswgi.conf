# 1st part of fence/nginx shim for gen3-fuse fs client
upstream indexdstub {
    server indexd-stub;
}

server {
    listen 80;

    # fence/nginx shim for gen3-fuse mock_wts_server st "location /" matches so fence won't get /user URI, which causes 404
    location /user {
        rewrite /user(.*) $1 last;
    }

    # 2nd part of fence/nginx shim for gen3-fuse fs client, which hardcodes <fence-hostname>/index path as indexd URI
    # preserve POST in call to indexd
    location ~ /index(?<subpath>.+) {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://indexdstub/index$subpath;
    }

    location / {
        uwsgi_param REMOTE_ADDR $http_x_forwarded_for if_not_empty;
        uwsgi_param REMOTE_USER $http_x_userid if_not_empty;
        uwsgi_param REMOTE_REQID $http_x_reqid if_not_empty;
        uwsgi_param REMOTE_SESSIONID $http_x_sessionid if_not_empty;
        uwsgi_param REMOTE_VISITORID $http_x_visitorid if_not_empty;
        uwsgi_param GEN3_REQUEST_TIMESTAMP $msec;
        uwsgi_param GEN3_TIMEOUT_SECONDS 45s;

        include uwsgi_params;
        uwsgi_pass unix:/var/run/gen3/uwsgi.sock;
        uwsgi_read_timeout 45s;
        uwsgi_send_timeout 45s;
    }

    location /_status {
        include uwsgi_params;
        uwsgi_pass unix:/var/run/gen3/uwsgi.sock;
        uwsgi_param GEN3_REQUEST_TIMESTAMP $msec;
        uwsgi_param GEN3_TIMEOUT_SECONDS 45s;
        uwsgi_read_timeout 45s;
        uwsgi_ignore_client_abort on;
        access_log off;
    }

    error_page 502 /502.html;
    location /502.html {
        return 504 '{"error": "Request Timeout or Service Unavailable"}';
    }

    error_page 504 /504.html;
    location /504.html {
        return 504 '{"error": "Request Timeout"}';
    }
}
